#!/bin/sh
#
# $Id$
#
# Creates BBS banner with BBS software version, MySQL version and number of
# compiles. (hopefully) Should still be modified to run from `make' rather
# than from `./configure'.
# Also, this should trap ctrl-c and whatnot and create the version regardless
# of being interrupted.

# File thats tores the actual defines for use in the BBS.
#
VERSIONFILE=include/version.h

# Check the current directory.
#
BUILD_DIR=`pwd`

# Check for .version file.
# If exists, read in, add one and save. If doesn't exist, set version to 1
# and create the file for next time.
#
if [ -f ".version" ]; then
    echo "updating $VERSIONFILE"
    typeset -i bbs_version=`/bin/cat .version`
    bbs_version=$bbs_version+1
else
    echo "creating $VERSIONFILE"
    typeset -i bbs_version=1
fi


svn_version=`svn info | grep Revision | awk -F ': ' '{print $2}'`

# Save new version number back into file.
#
echo $bbs_version > .version

echo "#ifdef USE_MYSQL" > $VERSIONFILE
echo -e "  #define BBS_VERSION\t\"Mono 2.061 (build $svn_version.$bbs_version) - `uname -m` `uname -s` `uname -r` - MySQL \" MYSQL_SERVER_VERSION" >> $VERSIONFILE
echo "#else" >> $VERSIONFILE
echo -e "  #define BBS_VERSION\t\"Mono 2.061 (build $svn_version.$bbs_version) - `uname -m` `uname -s` `uname -r`\"" >> $VERSIONFILE
echo "#endif" >> $VERSIONFILE

# Add build base dir and version as integer.
#
echo -e "#define BUILD_DIR\t\"$BUILD_DIR\"" >> $VERSIONFILE
echo -e "#define COMPILE_NUM\t$bbs_version" >> $VERSIONFILE

# And we're all done.
